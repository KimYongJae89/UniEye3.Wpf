<UserControl x:Class="Unieye.WPF.Base.Controls.ImageCanvas"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Unieye.WPF.Base.Controls"
             xmlns:XCmd="clr-namespace:Unieye.WPF.Base.Helpers.WPFXCommand"
             xmlns:services="clr-namespace:Unieye.WPF.Base.Services"
             xmlns:baseConverters="clr-namespace:Unieye.WPF.Base.Converters"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             DataContext="{Binding RelativeSource={RelativeSource Mode=Self}}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <baseConverters:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
        <services:MouseWheelUpDown x:Key="MouseWheelUpDown"/>
        <Style TargetType="Button" BasedOn="{StaticResource ButtonBaseStyle}"/>
        <Style TargetType="local:GlyphButton">
            <Setter Property="FontSize" Value="{StaticResource LargeFontSize}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="TextMargin" Value="0"/>
            <Setter Property="Padding" Value="{StaticResource XSmallHorizontalMargin}"/>
        </Style>

        <DataTemplate x:Key="RectangleDataTemaplate">
            <Rectangle Fill="{Binding FillColor, Converter={StaticResource ColorToBrushConverter}}"
                       Stroke="{Binding LineColor, Converter={StaticResource ColorToBrushConverter}}"
                       StrokeThickness="{Binding Thickness}"
                       Width="{Binding Width}"
                       Height="{Binding Height}">
            </Rectangle>
        </DataTemplate>

    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Horizontal">
            <!--Open-->
            <!--<local:GlyphButton Glyph="&#xED25;"
                               FontSize="{StaticResource LargeFontSize}"
                               BorderBrush="{DynamicResource BlackBrush}" 
                               BorderThickness="1"
                               TextMargin="0"
                               Padding="{StaticResource XSmallHorizontalMargin}"
                               Command="{Binding OpenImageCommand}"
                               IsEnabled="{Binding ImageButtonEnabled}"/>-->
            <!--Save-->
            <local:GlyphButton Glyph="&#xE792;"
                               FontSize="{StaticResource LargeFontSize}"
                               BorderBrush="{DynamicResource BlackBrush}"
                               BorderThickness="1"
                               TextMargin="0"
                               Padding="{StaticResource XSmallHorizontalMargin}"
                               Command="{Binding SaveImageCommand}"
                               IsEnabled="{Binding ImageButtonEnabled}"/>
            <!--Zoom In-->
            <local:GlyphButton Glyph="&#xE8A3;" 
                               FontSize="{StaticResource LargeFontSize}"
                               BorderBrush="{DynamicResource BlackBrush}"
                               BorderThickness="1"
                               TextMargin="0"
                               Padding="{StaticResource XSmallHorizontalMargin}"
                               Command="{Binding ZoomService.ZoomInCommand}"/>
            <!--Zoom Out-->
            <local:GlyphButton Glyph="&#xE71F;" 
                               FontSize="{StaticResource LargeFontSize}"
                               BorderBrush="{DynamicResource BlackBrush}"
                               BorderThickness="1"
                               TextMargin="0"
                               Padding="{StaticResource XSmallHorizontalMargin}"
                               Command="{Binding ZoomService.ZoomOutCommand}"/>
            <!--Fit to Size-->
            <local:GlyphButton Glyph="&#xE9A6;" 
                               FontSize="{StaticResource LargeFontSize}"
                               BorderBrush="{DynamicResource BlackBrush}"
                               BorderThickness="1"
                               TextMargin="0"
                               Padding="{StaticResource XSmallHorizontalMargin}"
                               Command="{Binding FitToSizeCommand}"/>
            <!--Show Defect-->
            <!--<local:GlyphButton Glyph="&#xE9A9;" 
                               FontSize="{StaticResource LargeFontSize}"
                               BorderBrush="{DynamicResource BlackBrush}"
                               BorderThickness="1"
                               TextMargin="0"
                               Padding="{StaticResource XSmallHorizontalMargin}"
                               Command="{Binding ShowDefectCommand}"/>-->
        </StackPanel>
        <Grid Grid.Row="1">
            <!--바깥 테두리-->
            <Border BorderThickness="1" BorderBrush="{DynamicResource BlackBrush}" Padding="0">
                <!--실제 이미지가 그려질 영역-->
                <Border Background="Black"
                        BorderThickness="0"
                        ClipToBounds="True" 
                        XCmd:PreviewMouseRightButtonDown.Command="{Binding ZoomService.RightMouseDownCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ImageCanvas}}}"
                        XCmd:PreviewMouseRightButtonUp.Command="{Binding ZoomService.RightMouseUpCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ImageCanvas}}}"
                        XCmd:PreviewMouseMove.Command="{Binding ZoomService.MouseMoveCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ImageCanvas}}}">
                    <Border.InputBindings>
                        <MouseBinding Gesture="{StaticResource MouseWheelUpDown}"
                                      Command="{Binding ZoomService.WheelCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ImageCanvas}}}"
                                      CommandParameter="{Binding Gesture, RelativeSource={RelativeSource Mode=Self}}">
                        </MouseBinding>
                    </Border.InputBindings>
                    <Canvas x:Name="imageCanvas" Opacity="1">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="{Binding ZoomService.Scale, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ImageCanvas}}}"
                                                ScaleY="{Binding ZoomService.Scale, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ImageCanvas}}}"/>
                                <TranslateTransform X="{Binding ZoomService.TranslateX, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ImageCanvas}}}"
                                                    Y="{Binding ZoomService.TranslateY, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ImageCanvas}}}"/>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Image Source="{Binding ImageSource, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ImageCanvas}}}"/>
                        <ItemsControl Visibility="{Binding VisibleShape}"
                                      ItemsSource="{Binding ShapeSource, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ImageCanvas}}}"
                                      ItemTemplate="{StaticResource RectangleDataTemaplate}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemContainerStyle>
                                <Style>
                                    <Setter Property="Canvas.Left" Value="{Binding X}"/>
                                    <Setter Property="Canvas.Top" Value="{Binding Y}"/>
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                        </ItemsControl>
                    </Canvas>
                </Border>
            </Border>
        </Grid>
    </Grid>
</UserControl>
