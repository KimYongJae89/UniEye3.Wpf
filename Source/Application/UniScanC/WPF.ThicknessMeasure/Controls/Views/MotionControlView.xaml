<UserControl x:Class="WPF.ThicknessMeasure.Controls.Views.MotionControlView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:mahapps="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:override="clr-namespace:WPF.ThicknessMeasure.Override"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:cvts="clr-namespace:Unieye.WPF.Base.Converters;assembly=Unieye.WPF.Base"
             xmlns:local="clr-namespace:WPF.ThicknessMeasure.Controls.Views"
             xmlns:vm="clr-namespace:WPF.ThicknessMeasure.Controls.ViewModels"
             mc:Ignorable="d"
             d:DesignHeight="450"
             d:DesignWidth="800">
    <UserControl.DataContext>
        <vm:MotionControlViewModel />
    </UserControl.DataContext>
    <UserControl.Resources>
        <cvts:VisibilityConverter x:Key="VisibilityConverter" />
        <ObjectDataProvider x:Key="MotionPositionEnum"
                            MethodName="GetValues"
                            ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="override:MotionPosition" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <Style TargetType="GroupBox"
               BasedOn="{StaticResource {x:Type GroupBox}}">
            <Setter Property="Margin"
                    Value="{StaticResource XXSmallMargin}" />
        </Style>
        <Style TargetType="Border">
            <Setter Property="Margin"
                    Value="{StaticResource XXSmallMargin}" />
            <Setter Property="BorderBrush"
                    Value="{DynamicResource GrayBrush1}" />
            <Setter Property="BorderThickness"
                    Value="1" />
        </Style>
        <Style TargetType="TextBlock"
               BasedOn="{StaticResource TextBlockBaseStyle}">
            <Setter Property="FontSize"
                    Value="{StaticResource MediumLargeFontSize}" />
            <Setter Property="Margin"
                    Value="{StaticResource XXSmallMargin}" />
        </Style>
        <Style TargetType="TextBox"
               BasedOn="{StaticResource TextBoxBaseStyle}">
            <Setter Property="FontSize"
                    Value="{StaticResource MediumLargeFontSize}" />
            <Setter Property="Margin"
                    Value="{StaticResource XXSmallMargin}" />
        </Style>
        <Style TargetType="Button"
               BasedOn="{StaticResource ButtonBaseStyle}">
            <Setter Property="FontSize"
                    Value="{StaticResource MediumLargeFontSize}" />
            <Setter Property="Margin"
                    Value="{StaticResource XXSmallMargin}" />
            <Setter Property="FontWeight"
                    Value="Normal" />
        </Style>
        <Style TargetType="Label">
            <Setter Property="FontSize"
                    Value="{StaticResource MediumLargeFontSize}" />
            <Setter Property="Margin"
                    Value="{StaticResource XXSmallMargin}" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
        </Style>
        <Style TargetType="mahapps:NumericUpDown">
            <Setter Property="FontSize"
                    Value="{StaticResource MediumLargeFontSize}" />
            <Setter Property="Margin"
                    Value="{StaticResource XXSmallMargin}" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="BorderBrush"
                    Value="{DynamicResource GrayBrush1}" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="Minimum"
                    Value="0" />
            <Setter Property="Maximum"
                    Value="100000" />
        </Style>
        <Style TargetType="ComboBox"
               BasedOn="{StaticResource ComboBoxBaseStyle}">
            <Setter Property="FontSize"
                    Value="{StaticResource MediumLargeFontSize}" />
            <Setter Property="Margin"
                    Value="{StaticResource XXSmallMargin}" />
            <Setter Property="BorderThickness"
                    Value="1" />
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Border Grid.Column="0"
                    Grid.Row="0"
                    Grid.ColumnSpan="2"
                    BorderBrush="{DynamicResource GrayBrush1}"
                    BorderThickness="1"
                    Background="{DynamicResource WhiteBrush}">
                <TextBlock Text="{Binding CurrentPosition}"
                           TextAlignment="Center"/>
            </Border>
            <ComboBox Grid.Column="0"
                      Grid.Row="1"
                      Grid.ColumnSpan="2"
                      ItemsSource="{Binding Source={StaticResource MotionPositionEnum}}"
                      SelectedItem="{Binding MotionPosition}" />
            <mahapps:NumericUpDown Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Grid.Row="2"
                                   StringFormat="N3"
                                   Value="{Binding TargetPosition}" />
            <Border Grid.Column="2"
                    Grid.Row="0"
                    Background="{DynamicResource WhiteBrush}"
                    BorderBrush="{DynamicResource GrayBrush1}"
                    BorderThickness="1">
                <Rectangle Visibility="{Binding IsOnAlarm, Converter={StaticResource VisibilityConverter}}"
                           Fill="Red" />
            </Border>
            <Border Grid.Column="2"
                    Grid.Row="1"
                    Background="{DynamicResource WhiteBrush}"
                    BorderBrush="{DynamicResource GrayBrush1}"
                    BorderThickness="1">
                <Rectangle Visibility="{Binding IsServoOn, Converter={StaticResource VisibilityConverter}}"
                           Fill="Lime" />
            </Border>
            <Button Grid.Column="3"
                    Grid.Row="0"
                    Content="Reset"
                    Command="{Binding ResetCommand}" />
            <Button Grid.Column="5"
                    Grid.Row="0"
                    Content="Speed"
                    Command="{Binding SpeedSettingCommand}" />
            <Button Grid.Column="3"
                    Grid.Row="1"
                    Content="Servo"
                    Command="{Binding ServoCommand}" />
            <Button Grid.Column="4"
                    Grid.Row="1"
                    Content="Home"
                    Command="{Binding HomeCommand}" />
            <Button Grid.Column="2"
                    Grid.Row="2"
                    Content="Move"
                    Command="{Binding MoveCommand}" />
            <Button Grid.Column="3"
                    Grid.Row="2"
                    Content="Jog +">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseButtonDown">
                        <i:InvokeCommandAction Command="{Binding JogPlusDownCommand}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseLeftButtonDown">
                        <i:InvokeCommandAction Command="{Binding JogPlusDownCommand}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseLeftButtonUp">
                        <i:InvokeCommandAction Command="{Binding JogUpCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Button Grid.Column="4"
                    Grid.Row="2"
                    Content="Jog -">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown">
                        <i:InvokeCommandAction Command="{Binding JogMinusDownCommand}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseLeftButtonUp">
                        <i:InvokeCommandAction Command="{Binding JogUpCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
        </Grid>
    </Grid>
</UserControl>
