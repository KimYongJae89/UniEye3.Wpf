<simpleWindow:ChildWindow x:Class="WPF.UniScanCM.Windows.Views.UmxCommandReceivedWindowView"
                          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                          xmlns:simpleWindow="clr-namespace:MahApps.Metro.SimpleChildWindow;assembly=MahApps.Metro.SimpleChildWindow"
                          xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                          xmlns:local="clr-namespace:WPF.UniScanCM.Windows.Views"
                          xmlns:baseConverters="clr-namespace:Unieye.WPF.Base.Converters;assembly=Unieye.WPF.Base"
                          xmlns:baseControls="clr-namespace:Unieye.WPF.Base.Controls;assembly=Unieye.WPF.Base"
                          xmlns:converters="clr-namespace:WPF.UniScanCM.Converters"
                          xmlns:mahapps="http://metro.mahapps.com/winfx/xaml/controls"
                          xmlns:extensions="clr-namespace:UniEye.Translation.Extensions;assembly=UniEye.Translation"
                          xmlns:localConverters="http://schemas.microsoft.com/netfx/2009/xaml/presentation"
                          mc:Ignorable="d" 
                          ShowTitleBar="False"
                          CloseByEscape="True"
                          ChildWindowWidth="400"
                          BorderBrush="{DynamicResource BlackBrush}"
                          BorderThickness="1"
                          d:DesignHeight="450" d:DesignWidth="800"
                          Loaded="ChildWindow_Loaded">
    <simpleWindow:ChildWindow.Resources>
        <localConverters:BooleanToVisibilityConverter   x:Key="booleanToVisibilityConverter" />
        <converters:ImCommandResultConverter x:Key="ImCommandResultConverter"/>
        <converters:ImCommandResultColorConverter x:Key="ImCommandResultColorConverter"/>
        <baseConverters:BooleanColorBrushConverter x:Key="BooleanColorBrushConverter"/>
        <baseConverters:ToStringConverter x:Key="ToStringConverter"/>
    </simpleWindow:ChildWindow.Resources>
    <simpleWindow:ChildWindow.OverlayBrush>
        <SolidColorBrush Opacity="0.8" Color="{DynamicResource WhiteColor}" />
    </simpleWindow:ChildWindow.OverlayBrush>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <StackPanel Margin="{StaticResource XXSmallMargin}">
            <TextBlock Text="{extensions:Translation EXCUTE_COMMAND}"
                       Margin="{StaticResource XXSmallMargin}"
                       HorizontalAlignment="Left"
                       FontSize="{StaticResource LargeFontSize}"
                       FontWeight="Bold" />
            <Separator Background="{DynamicResource AccentColorBrush}"
                       Margin="{StaticResource XXSmallMargin}" />
        </StackPanel>
        <Grid Grid.Row="1"
              Margin="{StaticResource XXSmallMargin}">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <DataGrid Grid.Row="0"
                      Name="dataGrid"
                      Margin="{StaticResource XXSmallMargin}"
                      ItemsSource="{Binding ModuleStatusList}"
                      BorderBrush="{DynamicResource BlackBrush}"
                      BorderThickness="1"
                      ColumnWidth="*"
                      IsReadOnly="True"
                      AutoGenerateColumns="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="{extensions:Translation Module}" 
                                        FontSize="{StaticResource MediumLargeFontSize}" 
                                        Binding="{Binding Converter={StaticResource ToStringConverter}}"/>
                    <DataGridTextColumn Header="{extensions:Translation Status}"
                                        FontSize="{StaticResource MediumFontSize}"
                                        Foreground="White">
                        <DataGridTextColumn.Binding>
                            <MultiBinding Converter="{StaticResource ImCommandResultConverter}">
                                <Binding/>
                                <Binding Path="ExecuteCommand" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:UmxCommandReceivedWindowView}}"/>
                            </MultiBinding>
                        </DataGridTextColumn.Binding>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource ImCommandResultColorConverter}">
                                            <Binding/>
                                            <Binding Path="ExecuteCommand" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:UmxCommandReceivedWindowView}}"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
            <Border Grid.Row="1"
                    Height="30"
                    BorderBrush="{DynamicResource BlackBrush}"
                    BorderThickness="1"
                    Margin="{StaticResource XXSmallMargin}">
                    <!--Visibility="{Binding Path=IsProgress, Converter={StaticResource booleanToVisibilityConverter}}"-->
                <mahapps:MetroProgressBar Minimum="0"
                                          Maximum="{Binding ModuleCount}"
                                          Value="{Binding ProgressValue}"
                                          IsIndeterminate="False"
                                          Margin="{StaticResource XXSmallMargin}"/>
            </Border>
            <baseControls:GlyphButton Grid.Row="2"
                                      Glyph="{Binding Path=Glyph}"
                                      Text="{extensions:Translation {Binding ButtonText}}"
                                      Foreground="{DynamicResource BlackBrush}"
                                      BorderBrush="{DynamicResource BlackBrush}"
                                      BorderThickness="1"
                                      FontSize="{StaticResource MediumFontSize}"
                                      Command="{Binding CancelCommand}"
                                      Margin="{StaticResource XXSmallMargin}"/>
        </Grid>
    </Grid>
</simpleWindow:ChildWindow>
