<UserControl x:Class="WPF.UniScanCM.Pages.Views.MonitoringPageView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:extensions="clr-namespace:UniEye.Translation.Extensions;assembly=UniEye.Translation"
             xmlns:baseControls="clr-namespace:Unieye.WPF.Base.Controls;assembly=Unieye.WPF.Base"
             xmlns:baseConverters="clr-namespace:Unieye.WPF.Base.Converters;assembly=Unieye.WPF.Base"
             xmlns:Layout="clr-namespace:Unieye.WPF.Base.Layout.Views;assembly=Unieye.WPF.Base"
             xmlns:converters="clr-namespace:WPF.UniScanCM.Converters"
             xmlns:vm="clr-namespace:WPF.UniScanCM.Pages.ViewModels"
             Dialog:DialogParticipation.Register="{Binding}"
             mc:Ignorable="d"
             d:DesignHeight="450"
             d:DesignWidth="800">
    <UserControl.DataContext>
        <vm:MonitoringPageViewModel />
    </UserControl.DataContext>
    <UserControl.Resources>
        <converters:HoldButtonConverter x:Key="HoldButtonConverter" />
        <baseConverters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
        <baseConverters:BooleanInvertConverter x:Key="BooleanInvertConverter" />
        <baseConverters:BitmapToImageSourceConverter x:Key="BitmapToImageSourceConverter" />
        <baseConverters:BooleanColorBrushConverter x:Key="BooleanColorBrushConverter" />
        <baseConverters:VisibilityConverter x:Key="VisibilityConverter" />
        <Style TargetType="TextBlock"
               BasedOn="{StaticResource TextBlockBaseStyle}">
            <Setter Property="Margin"
                    Value="0" />
            <Setter Property="FontWeight"
                    Value="Bold" />
            <Setter Property="TextWrapping"
                    Value="Wrap" />
            <Setter Property="TextAlignment"
                    Value="Center" />
        </Style>
        <Style TargetType="TextBox"
               BasedOn="{StaticResource TextBoxBaseStyle}">
            <Setter Property="Margin"
                    Value="0" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="BorderBrush"
                    Value="{DynamicResource BlackBrush}" />
            <Style.Triggers>
                <Trigger Property="IsReadOnly"
                         Value="False">
                    <Setter Property="Background"
                            Value="#fedf6f" />
                    <Setter Property="Foreground"
                            Value="{DynamicResource BlackBrush}" />
                </Trigger>
                <Trigger Property="IsReadOnly"
                         Value="True">
                    <Setter Property="Background"
                            Value="#f06060" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Button"
               BasedOn="{StaticResource ButtonBaseStyle}">
            <Setter Property="Margin"
                    Value="0" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="BorderBrush"
                    Value="{DynamicResource BlackBrush}" />
        </Style>
        <Style TargetType="Border">
            <Setter Property="Margin"
                    Value="0" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="BorderBrush"
                    Value="{DynamicResource BlackBrush}" />
        </Style>
    </UserControl.Resources>
    <Grid Background="{DynamicResource GrayBrush10}">
        <Grid Margin="{StaticResource XXSmallMargin}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid Grid.Row="1">
                <Layout:LayoutView DataContext="{Binding LayoutViewModel}" />
                <!--baseEvents:ModelBehavior.ModelBase="{Binding DataContext.Model, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type local:MonitoringPageView}}}"-->
                <!--baseEvents:InspectBehavior.ProductResults="{Binding DataContext.ProductResults, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MonitoringPageView}}}"-->
            </Grid>
            <Border Grid.Row="0"
                    BorderBrush="{DynamicResource BlackBrush}"
                    BorderThickness="1"
                    Background="{DynamicResource AccentColorBrush}"
                    Margin="{StaticResource XXSmallMargin}">
                <Grid>
                    <Grid.Resources>
                        <Style TargetType="TextBox"
                               BasedOn="{StaticResource TextBoxBaseStyle}">
                            <Setter Property="Margin"
                                    Value="0" />
                            <Setter Property="FontSize"
                                    Value="{StaticResource MediumLargeFontSize}" />
                        </Style>
                        <Style TargetType="TextBlock"
                               BasedOn="{StaticResource TextBlockBaseStyle}">
                            <Setter Property="Margin"
                                    Value="0" />
                            <Setter Property="FontSize"
                                    Value="{StaticResource MediumLargeFontSize}" />
                            <Setter Property="TextAlignment"
                                    Value="Center" />
                        </Style>
                        <Style TargetType="Label"
                               BasedOn="{StaticResource {x:Type Label}}">
                            <Setter Property="Margin"
                                    Value="0" />
                            <Setter Property="FontSize"
                                    Value="{StaticResource MediumLargeFontSize}" />
                            <Setter Property="HorizontalContentAlignment"
                                    Value="Center" />
                            <Setter Property="VerticalContentAlignment"
                                    Value="Center" />
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource BlackBrush}" />
                            <Setter Property="BorderThickness"
                                    Value="1" />
                        </Style>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="200" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <Border Grid.Row="0"
                            Grid.Column="0"
                            Background="{Binding Background, Converter={StaticResource ColorToBrushConverter}}"
                            DataContext="{Binding StatusModel}">
                        <TextBlock Name="statusLabel"
                                   Text="{Binding Text, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}"
                                   FontSize="{StaticResource BigFontSize}"
                                   Foreground="{Binding Foreground, Converter={StaticResource ColorToBrushConverter}}"
                                   FontWeight="Bold" />
                    </Border>
                    <baseControls:GlyphButton Grid.Row="0"
                                              Grid.Column="1"
                                              Glyph="&#xF5B0;"
                                              Text="{extensions:Translation Start}"
                                              FontSize="{StaticResource BigFontSize}"
                                              BorderBrush="{DynamicResource BlackBrush}"
                                              BorderThickness="1"
                                              IsEnabled="{Binding IsStartInspection, Converter={StaticResource BooleanInvertConverter}}"
                                              Command="{Binding StartCommand}"></baseControls:GlyphButton>
                    <!--<baseControls:GlyphButton Grid.Column="2 Grid.Row="2"
                                              Glyph="&#xEDB4;"
                                              Text="{extensions:Translation Hold}"
                                              FontSize="{StaticResource BigFontSize}"
                                              BorderBrush="{DynamicResource BlackBrush}"
                                              BorderThickness="0.5"
                                              Visibility="Collapsed"
                                              Background="{Binding IsSkipMode, Converter={StaticResource HoldButtonConverter}, ConverterParameter=0}"
                                              Foreground="{Binding IsSkipMode, Converter={StaticResource HoldButtonConverter}, ConverterParameter=1}"
                                              IsEnabled="{Binding IsStartInspection, Converter={StaticResource BooleanInvertConverter}}"
                                              Command="{Binding HoldCommand}">
                    </baseControls:GlyphButton>-->
                    <baseControls:GlyphButton Grid.Row="0"
                                              Grid.Column="2"
                                              Glyph="&#xE73B;"
                                              Text="{extensions:Translation Stop}"
                                              FontSize="{StaticResource BigFontSize}"
                                              BorderBrush="{DynamicResource BlackBrush}"
                                              BorderThickness="1"
                                              Command="{Binding StopCommand}" />
                                              <!--IsEnabled="{Binding IsStartInspection}"-->
                    <UniformGrid Grid.Row="0"
                                 Grid.Column="3"
                                 Rows="2">
                        <Label Content="{extensions:Translation MODEL}"
                               FontWeight="Bold"
                               Margin="0" />
                        <Button FontWeight="Bold"
                                Content="{Binding Model.ModelDescription.Name}"
                                Command="{Binding ModelParameterCommand}"
                                Margin="0" />
                    </UniformGrid>
                    <UniformGrid Grid.Row="0"
                                 Grid.Column="4"
                                 Rows="2">
                        <Label Content="{extensions:Translation LOT_NO}"
                               FontWeight="Bold" />
                        <Button Command="{Binding NextLotNoCommand}"
                                IsEnabled="{Binding IsStartInspection, Converter={StaticResource BooleanInvertConverter}}"
                                Margin="0">
                            <Button.Content>
                                <TextBlock Text="{Binding LotNo}" />
                            </Button.Content>
                        </Button>
                    </UniformGrid>
                    <DockPanel Grid.Row="0"
                               Grid.Column="5">
                        <UniformGrid Grid.Column="0"
                                     Rows="2"
                                     Visibility="{Binding UseManualSpeedSetting, Converter={StaticResource VisibilityConverter}}">
                            <Label Content="{extensions:Translation CURRENT_SPEED}"
                                   FontWeight="Bold" />
                            <Button Command="{Binding SetSpeedCommand}"
                                    IsEnabled="{Binding IsStartInspection, Converter={StaticResource BooleanInvertConverter}}"
                                    Margin="0">
                                <Button.Content>
                                    <TextBlock Text="{Binding TargetSpeed, StringFormat={}{0:0.0 m / min}}"
                                               Background="Transparent" />
                                </Button.Content>
                            </Button>
                        </UniformGrid>
                        <UniformGrid Grid.Column="1"
                                     Rows="2">
                            <Label Content="{extensions:Translation PROCESS_LENGTH_M}"
                                   FontWeight="Bold" />
                            <TextBox IsReadOnly="True"
                                     Text="{Binding InspectLength, StringFormat={}{0:0.00}}"
                                     BorderBrush="{DynamicResource BlackBrush}" />
                        </UniformGrid>
                    </DockPanel>
                    <Border Grid.Row="0"
                            Grid.Column="6"
                            BorderBrush="{DynamicResource BlackBrush}">
                        <Rectangle Name="logoRect"
                                   Fill="{DynamicResource WhiteBrush}"
                                   Width="auto">
                            <Rectangle.OpacityMask>
                                <ImageBrush ImageSource="{StaticResource BlankLogo}"
                                            Stretch="Uniform" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Border>
                    <!--<Grid Grid.Row="1"
                          Grid.ColumnSpan="7"
                          Visibility="Collapsed">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0" />
                            <ColumnDefinition Width="0" />
                        </Grid.ColumnDefinitions>
                        <UniformGrid Grid.Column="0"
                                     Rows="2">
                            <TextBlock Text="{extensions:Translation CURRENT_SPEED}" />
                            <Button Command="{Binding SetSpeedCommand}"
                                    IsEnabled="{Binding IsStartInspection, Converter={StaticResource BooleanInvertConverter}}"
                                    Margin="0">
                                <Button.Content>
                                    <TextBlock Text="{Binding TargetSpeed, StringFormat={}{0:0.0 m / min}}"
                                               Background="Transparent" />
                                </Button.Content>
                            </Button>
                        </UniformGrid>
                        --><!--<local:IOPortStatusSimpleView/>--><!--
                        <Button Grid.Column="1"
                                Content="{extensions:Translation IOPORT}"
                                FontSize="{StaticResource MediumLargeFontSize}"
                                Margin="0"
                                Command="{Binding IOStatusCommand}"></Button>
                    </Grid>-->
                </Grid>
            </Border>
        </Grid>
    </Grid>
</UserControl>
